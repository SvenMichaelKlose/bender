; bender – Copyright (c) 2015 Sven Michael Klose <pixel@copei.de>

(defun gen-c-opcode (x)
  (+ "    { "
     (? x.
        (? (& (| (eq x. 'ldx)
                 (eq x. 'stx))
              (eq .x 'zpx))
           (format nil "\"~A\", AM_ZPY"
                       (downcase (symbol-name x.)))
           (format nil "\"~A\", AM_~A"
                       (downcase (symbol-name x.))
                       (symbol-name .x)))
        (format nil "NULL, 0"))
     " }"))

(defun gen-c-opcode-map (path)
  (format t "; Generating C instruction map…~%")
  (with-output-file o path
    (format o "/* Generated by https://github.com/SvenMichaelKlose/bender/src/gen-opcode-map.lisp */~%")
    (format o "struct instruction {~%")
    (format o "    const char * mnemonic;~%")
    (format o "    int addrmode;~%")
    (format o "} opcode_map[256] = {~%")
    (princ (apply #'+ (pad (@ #'gen-c-opcode (array-list *opcode-map*))
                           (format nil ",~%")))
           o)
    (format o "~%};~%")))
