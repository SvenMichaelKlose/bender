; bender – Copyright (c) 2014–2015 Sven Michael Klose <pixel@copei.de>

(defun exec-name (m a)
  (+ "e_"
     (downcase (symbol-name m))
     (? (in? m 'accu 'branch)
        ""
        (+ "_" (downcase (symbol-name a))))))

(defun exec-code (m a)
  (format nil (+ "void~%"
                 "~A ()~%"
                 "{~%"
                 (? (| (modifying-instruction? m)
                       (not (eq a 'accu)))
                    (format nil "    e_~A ();~%" (downcase (symbol-name a)))
                    "")
                 "    e_~A ();~%"
                 (? (modifying-instruction? m)
                    "    e_writeback ();~%"
                    "")
                 "}~%"
                 "~%")
              (exec-name m a)
              (downcase (symbol-name m))))

(defun gen-c-emulator (path)
  (format t "Generating 6502 emulator C functions…~F")
  (with-output-file o path
    (format o "/* Generated by https://github.com/SvenMichaelKlose/bender/src/gen-c-emulator.lisp */")
    (with-queue q
      (dotimes (i 256)
        (? (== i #x22)
           (enqueue q "mos6502_jam")
           (!? (aref *opcode-map* i)
               (progn
                   (enqueue q (exec-name !. .!))
                   (princ (exec-code !. .!) o))
               (enqueue q "e_ill"))))
      (format o "typedef void (*instruction) (void);~%")
      (format o "instruction instructions[256] = ~A;~%" (apply #'+ (c-list (queue-list q) :brackets :curly)))
      (terpri))))
